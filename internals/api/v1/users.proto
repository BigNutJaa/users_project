syntax = "proto3";

package api_v1;
import "google/api/annotations.proto";
import "protocGenSwagger/options/annotations.proto";

option go_package = "/.;api_v1";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Users Service"
    version: "1.0"
    contact: {
      name: "blueprint-roa-golang-grpc-gateway"
      url: "http://localhost:3041"
      email: "chat@robowealth.co.th"
    }
  }
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {
        json_schema: {
          type: STRING
        }
      }
    }
  }
};

message Users {
  string user_name = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string role_code = 6;
  int64 created_at = 7;
  int64 updated_at = 8;
  string created_by = 9;
  string updated_by = 10;
}

message UsersCreateRequest {
  string user_name = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
//  string role_code = 6;
  // fix default to U02_R00 (input_role)
}

message UsersCreateResponse{
  string result = 1;
}

message UsersGetRequest {
  string user_name = 1;
  string first_name = 2;
  string email = 3;
  int32 id = 4;
}

message UsersGetResponse {
  string user_name = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string role_code = 6;
  int32 id = 7;

}

message UsersDeleteRequest {
  int32  id = 1;
  string user_name = 2;
}

message UsersDeleteResponse{
  string user_name = 1;
  string first_name = 2;
  string last_name = 3;
  int32 id = 4;
}

message UsersUpdateRequest {
  string user_name = 1;
  int32 id = 2;
  //Update
  string passwordUpdate = 3;
  string first_nameUpdate = 4;
  string last_nameUpdate = 5;
  string emailUpdate = 6;
  string role_codeUpdate = 7;
}

message UsersUpdateResponse{
  string user_name = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string role_code = 6;
}

message UsersListRequest {
  string user_name = 1;
  string first_name = 2;
  string email = 3;
  int64 page = 4;
  int64 per_page = 5;

}

message UsersListResponse {
  repeated UserListItem item = 1;
  int64 size = 2;
  int64 total = 3;
  int64 total_pages = 4;

}
message UserListItem {
  string user_name = 1;
  string first_name = 2;
  string email = 3;
  int32 id = 6;
}

service UsersService {
  rpc Create(UsersCreateRequest) returns (UsersCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/users"
      body: "*",
    };
  }
  rpc Get(UsersGetRequest) returns (UsersGetResponse) {
    option (google.api.http) = {
      get: "/api/v1/users"
    };
  }
  rpc Delete(UsersDeleteRequest) returns (UsersDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/users"
    };
  }
  rpc Update(UsersUpdateRequest) returns (UsersUpdateResponse) {
    option (google.api.http) = {
      patch: "/api/v1/users"
    };
  }
  rpc List(UsersListRequest) returns (UsersListResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/list"
    };
  }
}